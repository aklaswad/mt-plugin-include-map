<mt:setvarblock name="page_title"><__trans phrase="Include Map"></mt:setvarblock>
<mt:setvarblock name="content_header">
    <p id="create-new-link"><a href="<mt:var name="script_url">?__mode=rebuild_map&amp;_type=<mt:if name="is_blog">blog<mt:else>website</mt:if>&amp;id=<mt:var name="blog_id">&amp;go_map=1" class="icon-create icon-left">rebuild map</a></p>
</mt:setvarblock>
<mt:include name="include/header.tmpl">
<div id="map-wrapper">
<canvas id="draw-canvas" width="1000" height="600"></canvas>
<mt:loop name="templates">
    <div id="template-group-<mt:var name="__counter__">" class="template-group">
    <mt:loop name="__value__">
        <div id="tmpl-<mt:var name="id">" class="template" tmpl_id="<mt:var name="id">">
            <mt:var name="name"><mt:if name="other_blog">(<mt:if name="tmpl_blog_id" eq="-1">?<mt:else><mt:var name="tmpl_blog_id" default="system"></mt:if>)</mt:if>
            <mt:if name="search">
                <a class="edit-link" href="<mt:var name="script_url">?__mode=search_replace&amp;_type=template&amp;blog_id=0&amp;search=<mt:var name="name">&amp;is_limited=1&amp;search_cols=name&amp;do_search=1">
                    [search]
                </a>
            <mt:else>
                <a class="edit-link" href="<mt:var name="script_url">?__mode=view&amp;_type=template&amp;blog_id=<mt:var name="tmpl_blog_id">&amp;id=<mt:var name="id">">
                    [edit]
                </a>
            </mt:if>
        </div>
    </mt:loop>
    </div>
</mt:loop>
</div>
<style type="text/css">

#map-wrapper {
    width: 1000px;
    height: 600px;
    position: relative;
}

#draw-canvas {
    position: absolute;
    left: 0;
    top: 0;
}

.template-group {
    width: 180px;
    height: 600px;
    float: left;
}

.template {
    position: relative;
    width: 140px;
    height: 16px;
    margin: 2px 0;
    padding: 2px;
    overflow: hidden;
    font-size: 0.85em;
    border: 1px solid #bbb;
    color: #bbb;
}

.template:hover {
    border: 1px solid #213;
    color: #213;
    background: #bac;
    cursor: normal;
}

.edit-link {
    position: absolute;
    right: 0;
    top: 0;
    z-index: 1000;
    background: #bac;
    padding: 3px;
}

.template .edit-link {
    display: none;
}

.template:hover .edit-link {
    display: block;
}

.include {
    border: 1px solid #123;
    color: #123;
    background: #abc;
}

.include_by {
    border: 1px solid #312;
    color: #312;
    background: #cab;
}

</style>
<script type="text/javascript">
var include    = <mt:var name="include">;
var include_by = <mt:var name="include_by">;

function explorer( id, target, classMethod, className, path ) {
    var ary = target[id];
    if ( !ary ) return;
    path[id] = 1;
    for ( var i=0; i < ary.length; i++ ) {
        var inc_id = ary[i];
        if ( classMethod == 'add' ) {
            jQuery('#tmpl-' + inc_id).addClass(className);
            drawLine(id, inc_id, className);
        }
        else {
            jQuery('#tmpl-' + inc_id).removeClass(className);
        }
        if ( !(path[inc_id]) )
            explorer( inc_id, target, classMethod, className, path );
    }
    path[id] = 0;
}

jQuery('.template').mouseover( function(){
    var id = jQuery(this).attr('tmpl_id');
    explorer(id, include,    'add', 'include', {} );
    explorer(id, include_by, 'add', 'include_by', {} );
});

jQuery('.template').mouseout( function(){
    var id = jQuery(this).attr('tmpl_id');
    explorer(id, include,    'remove', 'include', {} );
    explorer(id, include_by, 'remove', 'include_by', {} );
    clearCanvas();
});

function drawLine ( from_id, to_id, className ) {
    var canvas = document.getElementById('draw-canvas');
    if ( ! canvas || ! canvas.getContext ) {
      return false;
    }
    var ctx = canvas.getContext('2d');
    var c    = jQuery('#draw-canvas');
    var co   = jQuery('#draw-canvas').offset();
    var from = jQuery('#tmpl-' + from_id);
    var to   = jQuery('#tmpl-' + to_id  );
    ctx.beginPath();

    if ( className == 'include' ) {
        ctx.strokeStyle = '#778899';
        ctx.moveTo(from.offset().left + from.outerWidth() - co.left, from.offset().top - co.top + ( from.outerHeight() / 2 ));
        ctx.lineTo(to.offset().left                       - co.left, to.offset().top   - co.top + ( to.outerHeight() / 2 ));
    }
    else {
        ctx.strokeStyle = '#998877';
        ctx.moveTo(from.offset().left - co.left,                   from.offset().top - co.top + ( from.outerHeight() / 2 ));
        ctx.lineTo(to.offset().left   + to.outerWidth() - co.left, to.offset().top   - co.top + ( to.outerHeight() / 2 ));
    }
    ctx.stroke();
}

function clearCanvas() {
    var canvas = document.getElementById('draw-canvas');
    if ( ! canvas || ! canvas.getContext ) {
      return false;
    }
    var ctx = canvas.getContext('2d');
    ctx.clearRect(0, 0, canvas.width, canvas.height);
}

</script>
<mt:include name="include/footer.tmpl">
